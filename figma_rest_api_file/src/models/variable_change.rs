/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "action")]
pub enum VariableChange {
    #[serde(rename="CREATE")]
    Create(Box<models::VariableCreate>),
    #[serde(rename="UPDATE")]
    Update(Box<models::VariableUpdate>),
    #[serde(rename="DELETE")]
    Delete(Box<models::VariableDelete>),
}

impl Default for VariableChange {
    fn default() -> Self {
        Self::Create(Default::default())
    }
}

/// The resolved type of the variable.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ResolvedType {
    #[serde(rename = "BOOLEAN")]
    Boolean,
    #[serde(rename = "FLOAT")]
    Float,
    #[serde(rename = "STRING")]
    String,
    #[serde(rename = "COLOR")]
    Color,
}

impl Default for ResolvedType {
    fn default() -> ResolvedType {
        Self::Boolean
    }
}


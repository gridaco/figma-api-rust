/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// VariableValue : The value for the variable. The value must match the variable's type. If setting to a variable alias, the alias must resolve to this type.
/// The value for the variable. The value must match the variable's type. If setting to a variable alias, the alias must resolve to this type.
#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum VariableValue {
    Boolean(bool),
    Number(f64),
    String(String),
    Rgb(Box<models::Rgb>),
    Rgba(Box<models::Rgba>),
    VariableAlias(Box<models::VariableAlias>),
}

impl Default for VariableValue {
    fn default() -> Self {
        Self::Boolean(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "VARIABLE_ALIAS")]
    VariableAlias,
}

impl Default for Type {
    fn default() -> Type {
        Self::VariableAlias
    }
}


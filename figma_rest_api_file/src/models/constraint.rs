/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Constraint : Sizing constraint for exports.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Constraint {
    /// Type of constraint to apply:  - `SCALE`: Scale by `value`. - `WIDTH`: Scale proportionally and set width to `value`. - `HEIGHT`: Scale proportionally and set height to `value`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// See type property for effect of this field.
    #[serde(rename = "value")]
    pub value: f64,
}

impl Constraint {
    /// Sizing constraint for exports.
    pub fn new(r#type: Type, value: f64) -> Constraint {
        Constraint {
            r#type,
            value,
        }
    }
}
/// Type of constraint to apply:  - `SCALE`: Scale by `value`. - `WIDTH`: Scale proportionally and set width to `value`. - `HEIGHT`: Scale proportionally and set height to `value`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "SCALE")]
    Scale,
    #[serde(rename = "WIDTH")]
    Width,
    #[serde(rename = "HEIGHT")]
    Height,
}

impl Default for Type {
    fn default() -> Type {
        Self::Scale
    }
}


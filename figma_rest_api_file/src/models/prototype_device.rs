/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PrototypeDevice : The device used to view a prototype.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PrototypeDevice {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<Box<models::Size>>,
    #[serde(rename = "presetIdentifier", skip_serializing_if = "Option::is_none")]
    pub preset_identifier: Option<String>,
    #[serde(rename = "rotation")]
    pub rotation: Rotation,
}

impl PrototypeDevice {
    /// The device used to view a prototype.
    pub fn new(r#type: Type, rotation: Rotation) -> PrototypeDevice {
        PrototypeDevice {
            r#type,
            size: None,
            preset_identifier: None,
            rotation,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "PRESET")]
    Preset,
    #[serde(rename = "CUSTOM")]
    Custom,
    #[serde(rename = "PRESENTATION")]
    Presentation,
}

impl Default for Type {
    fn default() -> Type {
        Self::None
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Rotation {
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "CCW_90")]
    Ccw90,
}

impl Default for Rotation {
    fn default() -> Rotation {
        Self::None
    }
}


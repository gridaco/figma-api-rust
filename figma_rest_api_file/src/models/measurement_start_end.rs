/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MeasurementStartEnd : The node and side a measurement is pinned to
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MeasurementStartEnd {
    #[serde(rename = "nodeId")]
    pub node_id: String,
    #[serde(rename = "side")]
    pub side: Side,
}

impl MeasurementStartEnd {
    /// The node and side a measurement is pinned to
    pub fn new(node_id: String, side: Side) -> MeasurementStartEnd {
        MeasurementStartEnd {
            node_id,
            side,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Side {
    #[serde(rename = "TOP")]
    Top,
    #[serde(rename = "RIGHT")]
    Right,
    #[serde(rename = "BOTTOM")]
    Bottom,
    #[serde(rename = "LEFT")]
    Left,
}

impl Default for Side {
    fn default() -> Side {
        Self::Top
    }
}


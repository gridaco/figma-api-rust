/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// VariableModeValue : An object that represents a value for a given mode of a variable. All properties are required.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VariableModeValue {
    /// The target variable. You can use the temporary id of a variable.
    #[serde(rename = "variableId")]
    pub variable_id: String,
    /// Must correspond to a mode in the variable collection that contains the target variable.
    #[serde(rename = "modeId")]
    pub mode_id: String,
    #[serde(rename = "value")]
    pub value: Box<models::VariableValue>,
}

impl VariableModeValue {
    /// An object that represents a value for a given mode of a variable. All properties are required.
    pub fn new(variable_id: String, mode_id: String, value: models::VariableValue) -> VariableModeValue {
        VariableModeValue {
            variable_id,
            mode_id,
            value: Box::new(value),
        }
    }
}


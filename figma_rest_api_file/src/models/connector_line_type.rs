/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ConnectorLineType : Connector line type.
/// Connector line type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConnectorLineType {
    #[serde(rename = "STRAIGHT")]
    Straight,
    #[serde(rename = "ELBOWED")]
    Elbowed,

}

impl std::fmt::Display for ConnectorLineType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Straight => write!(f, "STRAIGHT"),
            Self::Elbowed => write!(f, "ELBOWED"),
        }
    }
}

impl Default for ConnectorLineType {
    fn default() -> ConnectorLineType {
        Self::Straight
    }
}


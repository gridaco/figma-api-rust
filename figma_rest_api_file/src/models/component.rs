/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Component : A description of a main component. Helps you identify which component instances are attached to.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Component {
    /// The key of the component
    #[serde(rename = "key")]
    pub key: String,
    /// Name of the component
    #[serde(rename = "name")]
    pub name: String,
    /// The description of the component as entered in the editor
    #[serde(rename = "description")]
    pub description: String,
    /// The ID of the component set if the component belongs to one
    #[serde(rename = "componentSetId", skip_serializing_if = "Option::is_none")]
    pub component_set_id: Option<String>,
    /// An array of documentation links attached to this component
    #[serde(rename = "documentationLinks")]
    pub documentation_links: Vec<models::DocumentationLink>,
    /// Whether this component is a remote component that doesn't live in this file
    #[serde(rename = "remote")]
    pub remote: bool,
}

impl Component {
    /// A description of a main component. Helps you identify which component instances are attached to.
    pub fn new(key: String, name: String, description: String, documentation_links: Vec<models::DocumentationLink>, remote: bool) -> Component {
        Component {
            key,
            name,
            description,
            component_set_id: None,
            documentation_links,
            remote,
        }
    }
}


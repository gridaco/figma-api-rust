/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Hyperlink : A link to either a URL or another frame (node) in the document.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Hyperlink {
    /// The type of hyperlink. Can be either `URL` or `NODE`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The URL that the hyperlink points to, if `type` is `URL`.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// The ID of the node that the hyperlink points to, if `type` is `NODE`.
    #[serde(rename = "nodeID", skip_serializing_if = "Option::is_none")]
    pub node_id: Option<String>,
}

impl Hyperlink {
    /// A link to either a URL or another frame (node) in the document.
    pub fn new(r#type: Type) -> Hyperlink {
        Hyperlink {
            r#type,
            url: None,
            node_id: None,
        }
    }
}
/// The type of hyperlink. Can be either `URL` or `NODE`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "URL")]
    Url,
    #[serde(rename = "NODE")]
    Node,
}

impl Default for Type {
    fn default() -> Type {
        Self::Url
    }
}


/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// EasingEasingFunctionCubicBezier : A cubic bezier curve that defines the easing.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EasingEasingFunctionCubicBezier {
    /// The x component of the first control point.
    #[serde(rename = "x1")]
    pub x1: f64,
    /// The y component of the first control point.
    #[serde(rename = "y1")]
    pub y1: f64,
    /// The x component of the second control point.
    #[serde(rename = "x2")]
    pub x2: f64,
    /// The y component of the second control point.
    #[serde(rename = "y2")]
    pub y2: f64,
}

impl EasingEasingFunctionCubicBezier {
    /// A cubic bezier curve that defines the easing.
    pub fn new(x1: f64, y1: f64, x2: f64, y2: f64) -> EasingEasingFunctionCubicBezier {
        EasingEasingFunctionCubicBezier {
            x1,
            y1,
            x2,
            y2,
        }
    }
}


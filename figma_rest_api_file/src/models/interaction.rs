/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Interaction : An interaction in the Figma viewer, containing a trigger and one or more actions.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Interaction {
    #[serde(rename = "trigger", deserialize_with = "Option::deserialize")]
    pub trigger: Option<Box<models::Trigger>>,
    /// The actions that are performed when the trigger is activated.
    #[serde(rename = "actions", skip_serializing_if = "Option::is_none")]
    pub actions: Option<Vec<models::Action>>,
}

impl Interaction {
    /// An interaction in the Figma viewer, containing a trigger and one or more actions.
    pub fn new(trigger: Option<models::Trigger>) -> Interaction {
        Interaction {
            trigger: if let Some(x) = trigger {Some(Box::new(x))} else {None},
            actions: None,
        }
    }
}


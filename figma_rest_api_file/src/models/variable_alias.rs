/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// VariableAlias : Contains a variable alias
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VariableAlias {
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The id of the variable that the current variable is aliased to. This variable can be a local or remote variable, and both can be retrieved via the GET /v1/files/:file_key/variables/local endpoint.
    #[serde(rename = "id")]
    pub id: String,
}

impl VariableAlias {
    /// Contains a variable alias
    pub fn new(r#type: Type, id: String) -> VariableAlias {
        VariableAlias {
            r#type,
            id,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "VARIABLE_ALIAS")]
    VariableAlias,
}

impl Default for Type {
    fn default() -> Type {
        Self::VariableAlias
    }
}


/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ResponsePagination : If pagination is needed due to the length of the response, identifies the next and previous pages.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResponsePagination {
    /// A URL that calls the previous page of the response.
    #[serde(rename = "prev_page", skip_serializing_if = "Option::is_none")]
    pub prev_page: Option<String>,
    /// A URL that calls the next page of the response.
    #[serde(rename = "next_page", skip_serializing_if = "Option::is_none")]
    pub next_page: Option<String>,
}

impl ResponsePagination {
    /// If pagination is needed due to the length of the response, identifies the next and previous pages.
    pub fn new() -> ResponsePagination {
        ResponsePagination {
            prev_page: None,
            next_page: None,
        }
    }
}


/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InlineObject8 {
    /// The status of the request.
    #[serde(rename = "status")]
    pub status: Status,
    /// For successful requests, this value is always `false`.
    #[serde(rename = "error")]
    pub error: Error,
    #[serde(rename = "meta")]
    pub meta: Box<models::InlineObject8Meta>,
}

impl InlineObject8 {
    pub fn new(status: Status, error: Error, meta: models::InlineObject8Meta) -> InlineObject8 {
        InlineObject8 {
            status,
            error,
            meta: Box::new(meta),
        }
    }
}
/// The status of the request.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "200")]
    Variant200,
}

impl Default for Status {
    fn default() -> Status {
        Self::Variant200
    }
}
/// For successful requests, this value is always `false`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Error {
    #[serde(rename = "false")]
    False,
}

impl Default for Error {
    fn default() -> Error {
        Self::False
    }
}


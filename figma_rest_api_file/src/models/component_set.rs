/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ComponentSet : A description of a component set, which is a node containing a set of variants of a component.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComponentSet {
    /// The key of the component set
    #[serde(rename = "key")]
    pub key: String,
    /// Name of the component set
    #[serde(rename = "name")]
    pub name: String,
    /// The description of the component set as entered in the editor
    #[serde(rename = "description")]
    pub description: String,
    /// An array of documentation links attached to this component set
    #[serde(rename = "documentationLinks", skip_serializing_if = "Option::is_none")]
    pub documentation_links: Option<Vec<models::DocumentationLink>>,
    /// Whether this component set is a remote component set that doesn't live in this file
    #[serde(rename = "remote", skip_serializing_if = "Option::is_none")]
    pub remote: Option<bool>,
}

impl ComponentSet {
    /// A description of a component set, which is a node containing a set of variants of a component.
    pub fn new(key: String, name: String, description: String) -> ComponentSet {
        ComponentSet {
            key,
            name,
            description,
            documentation_links: None,
            remote: None,
        }
    }
}


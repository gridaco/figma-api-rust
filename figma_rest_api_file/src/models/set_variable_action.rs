/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SetVariableAction : Sets a variable to a specific value.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SetVariableAction {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "variableId", deserialize_with = "Option::deserialize")]
    pub variable_id: Option<String>,
    #[serde(rename = "variableValue", skip_serializing_if = "Option::is_none")]
    pub variable_value: Option<Box<models::VariableData>>,
}

impl SetVariableAction {
    /// Sets a variable to a specific value.
    pub fn new(r#type: Type, variable_id: Option<String>) -> SetVariableAction {
        SetVariableAction {
            r#type,
            variable_id,
            variable_value: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "SET_VARIABLE")]
    SetVariable,
}

impl Default for Type {
    fn default() -> Type {
        Self::SetVariable
    }
}


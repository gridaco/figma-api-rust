/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Measurement : A pinned distance between two nodes in Dev Mode
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Measurement {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "start")]
    pub start: Box<models::MeasurementStartEnd>,
    #[serde(rename = "end")]
    pub end: Box<models::MeasurementStartEnd>,
    #[serde(rename = "offset")]
    pub offset: Box<models::MeasurementOffset>,
    /// When manually overridden, the displayed value of the measurement
    #[serde(rename = "freeText", skip_serializing_if = "Option::is_none")]
    pub free_text: Option<String>,
}

impl Measurement {
    /// A pinned distance between two nodes in Dev Mode
    pub fn new(id: String, start: models::MeasurementStartEnd, end: models::MeasurementStartEnd, offset: models::MeasurementOffset) -> Measurement {
        Measurement {
            id,
            start: Box::new(start),
            end: Box::new(end),
            offset: Box::new(offset),
            free_text: None,
        }
    }
}


/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HasBlendModeAndOpacityTrait {
    /// How this node blends with nodes behind it in the scene (see blend mode section for more details)
    #[serde(rename = "blendMode")]
    pub blend_mode: models::BlendMode,
    /// Opacity of the node
    #[serde(rename = "opacity", skip_serializing_if = "Option::is_none")]
    pub opacity: Option<f64>,
}

impl HasBlendModeAndOpacityTrait {
    pub fn new(blend_mode: models::BlendMode) -> HasBlendModeAndOpacityTrait {
        HasBlendModeAndOpacityTrait {
            blend_mode,
            opacity: None,
        }
    }
}


/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ColorStop : A single color stop with its position along the gradient axis, color, and bound variables if any
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ColorStop {
    /// Value between 0 and 1 representing position along gradient axis.
    #[serde(rename = "position")]
    pub position: f64,
    /// Color attached to corresponding position.
    #[serde(rename = "color")]
    pub color: Box<models::Rgba>,
    #[serde(rename = "boundVariables", skip_serializing_if = "Option::is_none")]
    pub bound_variables: Option<Box<models::ColorStopBoundVariables>>,
}

impl ColorStop {
    /// A single color stop with its position along the gradient axis, color, and bound variables if any
    pub fn new(position: f64, color: models::Rgba) -> ColorStop {
        ColorStop {
            position,
            color: Box::new(color),
            bound_variables: None,
        }
    }
}


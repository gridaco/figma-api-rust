/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ComponentPropertyType : Component property type.
/// Component property type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ComponentPropertyType {
    #[serde(rename = "BOOLEAN")]
    Boolean,
    #[serde(rename = "INSTANCE_SWAP")]
    InstanceSwap,
    #[serde(rename = "TEXT")]
    Text,
    #[serde(rename = "VARIANT")]
    Variant,

}

impl std::fmt::Display for ComponentPropertyType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Boolean => write!(f, "BOOLEAN"),
            Self::InstanceSwap => write!(f, "INSTANCE_SWAP"),
            Self::Text => write!(f, "TEXT"),
            Self::Variant => write!(f, "VARIANT"),
        }
    }
}

impl Default for ComponentPropertyType {
    fn default() -> ComponentPropertyType {
        Self::Boolean
    }
}


/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Style : A set of properties that can be applied to nodes and published. Styles for a property can be created in the corresponding property's panel while editing a file.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Style {
    /// The key of the style
    #[serde(rename = "key")]
    pub key: String,
    /// Name of the style
    #[serde(rename = "name")]
    pub name: String,
    /// Description of the style
    #[serde(rename = "description")]
    pub description: String,
    /// Whether this style is a remote style that doesn't live in this file
    #[serde(rename = "remote")]
    pub remote: bool,
    #[serde(rename = "styleType")]
    pub style_type: models::StyleType,
}

impl Style {
    /// A set of properties that can be applied to nodes and published. Styles for a property can be created in the corresponding property's panel while editing a file.
    pub fn new(key: String, name: String, description: String, remote: bool, style_type: models::StyleType) -> Style {
        Style {
            key,
            name,
            description,
            remote,
            style_type,
        }
    }
}


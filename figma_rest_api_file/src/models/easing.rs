/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Easing : Describes an easing curve.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Easing {
    /// The type of easing curve.
    #[serde(rename = "type")]
    pub r#type: models::EasingType,
    #[serde(rename = "easingFunctionCubicBezier", skip_serializing_if = "Option::is_none")]
    pub easing_function_cubic_bezier: Option<Box<models::EasingEasingFunctionCubicBezier>>,
    #[serde(rename = "easingFunctionSpring", skip_serializing_if = "Option::is_none")]
    pub easing_function_spring: Option<Box<models::EasingEasingFunctionSpring>>,
}

impl Easing {
    /// Describes an easing curve.
    pub fn new(r#type: models::EasingType) -> Easing {
        Easing {
            r#type,
            easing_function_cubic_bezier: None,
            easing_function_spring: None,
        }
    }
}


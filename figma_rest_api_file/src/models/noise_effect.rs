/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum NoiseEffect {
    MonotoneNoiseEffect(Box<models::MonotoneNoiseEffect>),
    MultitoneNoiseEffect(Box<models::MultitoneNoiseEffect>),
    DuotoneNoiseEffect(Box<models::DuotoneNoiseEffect>),
}

impl Default for NoiseEffect {
    fn default() -> Self {
        Self::MonotoneNoiseEffect(Default::default())
    }
}
/// The string literal 'DUOTONE' representing the noise type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum NoiseType {
    #[serde(rename = "DUOTONE")]
    Duotone,
}

impl Default for NoiseType {
    fn default() -> NoiseType {
        Self::Duotone
    }
}
/// The string literal 'NOISE' representing the effect's type. Always check the type before reading other properties.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "NOISE")]
    Noise,
}

impl Default for Type {
    fn default() -> Type {
        Self::Noise
    }
}


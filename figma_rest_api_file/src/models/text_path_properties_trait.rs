/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TextPathPropertiesTrait {
    /// The raw characters in the text path node.
    #[serde(rename = "characters")]
    pub characters: String,
    /// Style of text including font family and weight.
    #[serde(rename = "style")]
    pub style: Box<models::TextPathTypeStyle>,
    /// The array corresponds to characters in the text box, where each element references the 'styleOverrideTable' to apply specific styles to each character. The array's length can be less than or equal to the number of characters due to the removal of trailing zeros. Elements with a value of 0 indicate characters that use the default type style. If the array is shorter than the total number of characters, the characters beyond the array's length also use the default style.
    #[serde(rename = "characterStyleOverrides")]
    pub character_style_overrides: Vec<f64>,
    /// Internal property, preserved for backward compatibility. Avoid using this value.
    #[serde(rename = "layoutVersion", skip_serializing_if = "Option::is_none")]
    pub layout_version: Option<f64>,
    /// Map from ID to TextPathTypeStyle for looking up style overrides.
    #[serde(rename = "styleOverrideTable")]
    pub style_override_table: std::collections::HashMap<String, models::TextPathTypeStyle>,
}

impl TextPathPropertiesTrait {
    pub fn new(characters: String, style: models::TextPathTypeStyle, character_style_overrides: Vec<f64>, style_override_table: std::collections::HashMap<String, models::TextPathTypeStyle>) -> TextPathPropertiesTrait {
        TextPathPropertiesTrait {
            characters,
            style: Box::new(style),
            character_style_overrides,
            layout_version: None,
            style_override_table,
        }
    }
}


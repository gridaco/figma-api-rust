/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum BlurEffect {
    NormalBlurEffect(Box<models::NormalBlurEffect>),
    ProgressiveBlurEffect(Box<models::ProgressiveBlurEffect>),
}

impl Default for BlurEffect {
    fn default() -> Self {
        Self::NormalBlurEffect(Default::default())
    }
}
/// The string literal 'PROGRESSIVE' representing the blur type. Always check the blurType before reading other properties.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BlurType {
    #[serde(rename = "PROGRESSIVE")]
    Progressive,
}

impl Default for BlurType {
    fn default() -> BlurType {
        Self::Progressive
    }
}
/// A string literal representing the effect's type. Always check the type before reading other properties.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "LAYER_BLUR")]
    LayerBlur,
    #[serde(rename = "BACKGROUND_BLUR")]
    BackgroundBlur,
}

impl Default for Type {
    fn default() -> Type {
        Self::LayerBlur
    }
}


/*
 * Figma API
 *
 * This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).
 *
 * The version of the OpenAPI document: 0.31.0
 * Contact: support@figma.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TriggerOneOf1 {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "delay")]
    pub delay: f64,
    /// Whether this is a [deprecated version](https://help.figma.com/hc/en-us/articles/360040035834-Prototype-triggers#h_01HHN04REHJNP168R26P1CMP0A) of the trigger that was left unchanged for backwards compatibility. If not present, the trigger is the latest version.
    #[serde(rename = "deprecatedVersion", skip_serializing_if = "Option::is_none")]
    pub deprecated_version: Option<bool>,
}

impl TriggerOneOf1 {
    pub fn new(r#type: Type, delay: f64) -> TriggerOneOf1 {
        TriggerOneOf1 {
            r#type,
            delay,
            deprecated_version: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "MOUSE_ENTER")]
    MouseEnter,
    #[serde(rename = "MOUSE_LEAVE")]
    MouseLeave,
    #[serde(rename = "MOUSE_UP")]
    MouseUp,
    #[serde(rename = "MOUSE_DOWN")]
    MouseDown,
}

impl Default for Type {
    fn default() -> Type {
        Self::MouseEnter
    }
}

